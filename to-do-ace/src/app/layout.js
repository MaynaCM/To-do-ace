'use client';
import './global.css'
import { useState, useEffect } from "react";
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
import { faCircleUser } from '@fortawesome/free-solid-svg-icons';
import TaskCard from './ticket';
import Homepage from './homepage.js'
import Auth from './login';
import { useCookies} from 'react-cookie'



export const metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
}

export default function RootLayout() {
  const [cookies, setCookie, removeCookie] = useCookies(null)
  const authToken = cookies.AuthToken
  const userEmail = cookies.Email
  const [task, setTask] = useState(null)
  const [showBalloon, setShowBalloon] = useState(false);

  //show Logout
  const handleBalloonClick = () => {
    setShowBalloon(!showBalloon);
  };

  //logout
  const singOut = () => {
    removeCookie('Email')
    removeCookie('AuthToken')
    window.location.reload()
  }


  const getData = async () => {
    try{
      const response = await fetch(`${process.env.REACT_APP_SERVERURL}/todos/${userEmail}`)
      const json = await response.json()
      console.log(json)
      setTask(json)
    } catch(err){
      console.error(err)
    }
  }

  useEffect(() => {
    if(authToken){
      getData()
    }}
    ,[])

  console.log(task)

  //Sort By date

  const sortedTasks = task?.sort((a, b) => new Date(a.date) - new Date(b.date))


  return (
    <html lang="en">
      <body>
      {!authToken && <Auth />} 
      {authToken && 
      <main className="bg-cyan h-screen w-screen flex content-end items-end overflow-x-hidden">
      <header className="navBar relative">
        <img src='/assets/logo.png' className='pl-6 mt-2'/>
        <ul className="flex flex-row gap-4  justify-end px-6 text-white w-full">
          <li className="text-lg pl-6">
            <a className='cursor-pointer' onClick={handleBalloonClick}>
              <FontAwesomeIcon icon={faCircleUser} size='2xl'/>
            </a>
            {showBalloon && (
              <div className="logout w-1/12 absolute flex justify-center mt-[1%] bg-white text-pink-base p-2 rounded-md right-[0%]">
              <a className='cursor-pointer' onClick={singOut}>Sair</a>
              </div>
              )}
          </li>
        </ul>
      </ header>
      <div className="bg-white h-[70%] w-screen rounded-tl-[90px] ">
          <Homepage  getData={getData}/>
          <div className='overflow-y-auto bg-white w-full p-4'>
          {sortedTasks?.map((task) => <TaskCard key={task.id} task={task} getData={getData} progress={task.progress}/>)}
        </div>
        </div>
      </main>
  }
      </body>
    </html>
  )
}

